install.packages(c(""MASS"", ""PPCI"", ""class"", ""corrplot"", ""lmtest"", ""data.table"", ""greybox"", ""smooth"", ""tsutils"", ""forecast"", ""Mcomp""))
install.packages("MASS")
install.packages("PPCI")
Sys.which("make")
Sys.which("make")
install.packages(c("MASS","PPCI","class","corrplot","lmtest","data.table","greybox","smooth","tsutils","forecast","Mcomp"))
install.packages(c("tsutils","Mcomp"))
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
seasplot(M3[[1964]]$x)
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
load("./grocery.Rdata")
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
n
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
plot(cma)
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
fit
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
fit
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
fit1
fit2
fit3
fit4
fit5
fit6
fit1$ICs
fit1$ICs[2]
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
aicc
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
plot(frc1v)
plot(frc6v)
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
errv
which.min(errv)
errv[7]
err7v
plot(frc7v)
plot(tail(frc7v))
plot(tail(frc7v, 21))
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
omax
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
err
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Monday exercise.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Thursday workshop.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Thursday workshop.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Thursday workshop.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Thursday workshop.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Thursday workshop.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Thursday workshop.R')
plot(accnfcst)
source('~/GitHub/OWFSim/NATCOR Forecasting/Thursday workshop.R')
source('~/GitHub/OWFSim/NATCOR Forecasting/Thursday workshop.R')
autoplot(data) + autolayer(sim)
source('~/GitHub/OWFSim/NATCOR Forecasting/Thursday workshop.R')
import ggplot
1 + 2
let x = 4
x = 4
x
x * 54
install.packages("ggplot2")
library(ggplot2)
ggplot(mpg, aes(displ, hwy, colour = class)) + geom_point()
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
# Init Ggplot
ggplot(midwest, aes(x=area, y=poptotal)) + geom_point()  # area and poptotal are columns in 'midwest'
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
?geom_smooth
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
plot(g)
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
g <- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method="lm")  # set se=FALSE to turnoff confidence bands
# Delete the points outside the limits
g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))   # deletes points
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
plot(g1)
# Delete the points outside the limits
#g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))   # deletes points
# g + xlim(0, 0.1) + ylim(0, 1000000)   # deletes points
plot(g)
source("~/R tests/ggplotTut.R")
# Add Title and Labels
g1 + labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
source("~/R tests/ggplotTut.R")
g <- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method="lm", se=TRUE)  # set se=FALSE to turnoff confidence bands
source("~/R tests/ggplotTut.R")
plot(g1)
source("~/R tests/ggplotTut.R")
plot(g2)
?geom_smooth
source("~/R tests/ggplotTut.R")
# Full Plot call
library(ggplot2)
source("~/R tests/ggplotTut.R")
source("~/R tests/ggplotTut.R")
View(midwest)
#Import data
results <- read.csv(file = 'aaa_Collective.csv')
#Import data
results <- read.csv(file = './aaa_Collective.csv')
getwd()
setwd("..")
getwd()
setwd("Documenten")
setwd("Github")
setwd("OWFSim")
setwd("R")
#Import data
setwd()
#Import data
results <- read.csv(file = './aaa_Collective.csv')
#Import data
results <- read.csv(file = './aaa_Collective.csv', sep=";", dec=",")
View(results)
#Import data
results <- read.csv(file = './aaa_Collective.csv', sep=";", dec=",", header=TRUE)
View(results)
#Import data
results <- read.csv(file = './aaa_Collective.csv', sep=";", dec=",", header=FALSE)
View(results)
?read.csv()
#Import data
results <- read.csv(file = './aaa_Collective.csv', sep=";", dec=",", header=TRUE)
View(results)
View(results)
#Import data
results <- read.csv(file = './aaa_Collective.csv', sep=";", dec=",", header=TRUE)
View(results)
View(results)
View(results)
#Import data
results <- read.csv(file = './aaa_Collective.csv', sep=";", dec=",", header=TRUE)
#Import data
results <- read.csv(file = './aaa_Collective.csv', sep=";", dec=",", header=TRUE)
View(results)
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
lines[1]
lines[2]
lines[0]
source("~/GitHub/OWFSim/R/plotting.R")
cols
cols[1]
cols[[1]
]
cols[[1]][1]
cols[[1]][-1]
?read.csv2
source("~/GitHub/OWFSim/R/plotting.R")
read.csv2(file = "aaa_Collective.csv", header = F)
read.csv2(file = "aaa_Collective.csv", header = T)
source("~/GitHub/OWFSim/R/plotting.R")
#Import data
results <- read.csv2(file = "aaa_Collective.csv")
#Import data
results <- read.csv2(file = "aaa_Collective.csv")
View(results)
results.columns
results.columns()
results.row.names
results
colnames(results)
colnames(results_[-1]
)
colnames(results[-1])
colnames(results) <- colnames(results[-1])
results
View(results)
results.drop("")
?subset
results = subset(results, select = -c(""))
?c
c(1)
c(2)
results = subset(results, select = -1)
source("~/GitHub/OWFSim/R/plotting.R")
#Import data
results <- read.csv2(file = "aaa_Collective.csv")
source("~/GitHub/OWFSim/R/plotting.R")
View(results)
colnames(results)
?ggparcoord
source("~/GitHub/OWFSim/R/plotting.R")
?ggparcoord
results = subset(results, select = -15)
#Import data
results <- read.csv2(file = "aaa_Collective.csv")
colnames(results) <- colnames(results[-1])
results = subset(results, select = -15)
library(ggplot2)
?ggparcoord
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
library(ggplot2)
library(GGally)
data(crabs, package = "MASS")
ggparcoord(crabs)
?data
ggparcoord(results)
?ggparcoord
ggparcoord(results, 1:(ncol(results)-5))
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(results) #TODO: Select columns, group rows
View(results)
l <- [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
l <- list(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)
l
l[13]
l[[13]]
l <- c(1, 2, 3, 4, 5)
l
l[2]
l2 <- subset(l, select = -5)
?subset
l2 <- subset(l, select = -4)
[1..5]
c(1..5)
l[-4]
l[-2, -4]
l[c(-2, -4)]
l[-c(2, 4)]
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(results) #TODO: Select columns, group rows
results[1:10]
results[10]
results
results0
results[1,]
results[1:5,]
View(resultsRaw)
source("~/GitHub/OWFSim/R/plotting.R")
resultsRaw[,12]
colnames(resultsRaw)
resultsRaw[,10]
resultsRaw %>% mutate(Category = if_else(Turbines == 'Al', 'Sep', if_else(Vessels = 'NO', 'Ove', 'Sha')))
?mutate
source("~/GitHub/OWFSim/R/plotting.R")
?ifelse
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
View(resultsRaw)
source("~/GitHub/OWFSim/R/plotting.R")
View(resultsRaw)
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
View(results)
