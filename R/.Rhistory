geom_line(aes(linetype = as.factor(Size)), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Size", scale = "uniminmax") +
geom_line(aes(linetype = Category), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Size", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Category)), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Size", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Category)), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Size", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Category)), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 1)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 1) +
scale_linetype_manual(values=c("twodash", "dotted", "dashed", "solid"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 1) +
scale_linetype_manual(values=c("twodash", "dotted", "dashed", "solid"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "dashed", "solid"))
?scale_linetype_manual
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "dotdash", "solid"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "bullet"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "blank"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "threedash"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "fourdash"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 2)
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 2)
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size), labels = Size), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2, labels = Size) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
resultsDur <- aggregate(cbind(Objective, ProdLoss, DirCosts, VesCosts, RepCosts, TechCosts) ~ Category + Dur, resultsRaw, mean)
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Dur)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Dur)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "fourdash", "sixdash"))
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "fourdash", "sixdash"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "fourdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 1) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 1.5)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Size)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsVes, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Vessels)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsVes, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Vessels)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsPerc, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Percent)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsTurb, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Turbines)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 1.5)
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 1.5)
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 1.5)
ggparcoord(resultsVes, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Vessels)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
ggparcoord(resultsPerc, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Percent)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
ggparcoord(resultsPerc, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Percent)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
ggparcoord(resultsVes, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Vessels)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 1.5)
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 1.5)
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
?read.table
read.table("FINO1_windspeed.dat", F, "\t", skip = 6)
windspeed <- read.table("FINO1_windspeed.dat", F, "\t", skip = 6)
View(windspeed)
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
View(windspeed)
source("~/GitHub/OWFSim/R/weather.R")
View(windspeed)
?parse_date_time
??parse_date_time
?strptime
x <- c("2010-01-01 00:00:00", "2015-06-07 11:40:00")
strptime(x, "%Y-%m-%d %H:%M:%S")
z <- strptime(x, "%Y-%m-%d %H:%M:%S")
mon(z)
z.mon
z[1]
mon(z[1])
z[1].mon
?leapS
z[1]$mon
z[2]$mon
z[2]$mon+1
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
curve[15]
curve[10]
curve
curve * 2
curve$4
?approx
approx(curve)
approx(1:10)
approxfun(curve)
approxfun(curve)(11)
approxfun(curve)(12)
approxfun(curve)(11.5)
approxfun(curve)(16.43)
approxfun(curve, yleft = 0, yright = 0)(16.43)
approxfun(curve, yleft = 0, yright = 0)(24)
approxfun(curve, yleft = 0, yright = 0)(24.5)
approxfun(curve, yleft = 0, yright = 0)(25.5)
approxfun(curve, yleft = 0, yright = 0)(25)
approxfun(curve, yleft = 0, yright = 0)(25.0001)
approxfun(curve, yleft = 0, yright = 0)(3)
approxfun(curve, yleft = 0, yright = 0)(4)
approxfun(curve, yleft = 0, yright = 0)(3.5)
approxfun(curve, yleft = 0, yright = 0)(3.4)
approxfun(curve, yleft = 0, yright = 0)(1)
approxfun(curve, yleft = 0, yright = 0)(0)
approxfun(curve, yleft = 0, yright = 0)(-4)
approxfun(curve, yleft = 0, yright = 0)(11)
approxfun(curve * 2, yleft = 0, yright = 0)(11)
source("~/GitHub/OWFSim/R/weather.R")
curve(10)
curve(11)
source("~/GitHub/OWFSim/R/weather.R")
curve(10)
source("~/GitHub/OWFSim/R/weather.R")
curve(10)
curve(9.75)
source("~/GitHub/OWFSim/R/weather.R")
curve(9.75)
curve(10)
?data.frame
table(strptime(windspeed$Time)$mon, curve(windspeed$Value))
table(strptime(windspeed$Time, "%Y-%m-%d %H:%M:%S")$mon, curve(windspeed$Value))
strptime(windspeed$Time, "%Y-%m-%d %H:%M:%S")
strptime(windspeed$Time, "%Y-%m-%d %H:%M:%S")$mon
curve(windspeed$Value)
t <- table(strptime(windspeed$Time, "%Y-%m-%d %H:%M:%S")$mon, curve(windspeed$Value))
t[1,1]
t[1,]
m <- c(1, 2, 3, 4, 1, 2, 3, 4, 1, 1, 1, 2, 4, 4)
v <- c(5, 2, 6, 2, 3, 8, 6, 0, 7, 3, 6, 8, 9, 1)
t2 <- table(m, v)
t2
list(m, v)
data.frame(m, v)
f <- data.frame(m, v)
aggregate(v ~ m)
aggregate(v ~ m, f, mean)
f <- data.frame(strptime(windspeed$Time, "%Y-%m-%d %H:%M:%S")$mon, curve(windspeed$Value))
View(f)
aggregate(2 ~ 1, f, mean)
?aggregate
colnames(f) <- c("m", "v")
aggregate(v ~ m, f, mean)
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
View(windspeedSimple)
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
View(waveheight)
?read.table
source("~/GitHub/OWFSim/R/weather.R")
?mutate
source("~/GitHub/OWFSim/R/weather.R")
?apply
waveheight$Time <- strptime(waveheight$Time)
waveheight$Time <- strptime(waveheight$Time, "%Y-%m-%d %H:%M:%S")
waveheight$Time[1]
waveheight$Time[1]$mon
waveheight$Time[1]$year
waveheight$Time[1]$y
waveheight$Time[1]$day
waveheight$Time[1]$d
?POSIXlt
waveheight$Time[1]$yday
waveheight$Time[100]$yday
waveheight$Time[1000]$yday
waveheight$Time[10000]$yday
waveheight$Time[100000]$yday
t <- c("2015-01-01 00:10:00", "2015-01-01 01:06:00")
t[2] - t[1]
t2 <- strptime(t)
t2 <- strptime(t, "%Y-%m-%d %H:%M:%S")
source("~/GitHub/OWFSim/R/weather.R")
t2 <- strptime(t, form)
t2
t2[2]
t2[2] - t2[1]
t2[1]
t2[1] + 5
t2[2] - t2[1] > 55
t2[2] - t2[1] > 57
(t2[2] - t2[1])$min
t3 <- t2[2] - t2[1]
t3
t3 > 50
t3 > 56
t3 - 10
t3 - 10.5
5 % 2
5 mod 2
5 'mod' 2
5 %% 2
14 %% 3
t3 %% 9
t <- c("2015-01-01 00:10:00", "2015-01-01 01:06:00", "2015-10-12 12:50:00")
t2 <- strptime(t, form)
t2[3] - t2[1]
t2[3] - t2[1] > 284
t2[3] - t2[1] > 285
t2[3] - (t2[1] + 1)
t2[3] - (t2[1] + 10)
t2[3] - (t2[1] + 100)
t2[3] - (t2[1] + 1000)
t2[3] - (t2[1] + 10000)
t2[3] - (t2[1] + 100000)
source("~/GitHub/OWFSim/R/weather.R")
t3
as.numeric(t3)
as.numeric(t3, units = "secs")
as.numeric(t3, units = "hours")
floor(as.numeric(t3, units = "hours"))
t[1]
t2[1]
t2[1]$min
t2[1]$min <- 0
t2[1]$min
t2[1]
t2
t2$min
t2$min <- 0
t2$min
t2
source("~/GitHub/OWFSim/R/weather.R")
waveheight$Time$min <- 0
View(waveheight)
source("~/GitHub/OWFSim/R/weather.R")
waveheight$Time$min
(waveheight$Time)$min
(waveheight$Time)$min <- 0
waveheight$Time$min <- 0
source("~/GitHub/OWFSim/R/weather.R")
t <- waveheight$Time
View(t)
t$min
t$min <- 1
t <- waveheight$Time
t2 <- t - 1
t2 <- waveheight$Time - 1
?as.vector
t3 <- as.vector(t)
typeof(t3)
typeof(t2)
typeof(t)
typeof(waveheight)
typeof(waveheight$Time)
mode(t3)
mode(t2)
mode(t)
mode(waveheight)
mode(waveheight$Time)
t4 <- t2
t4 <- t2 + 1
t4$min
?lapply
t2[1]
as.numeric(t2[1])
as.numeric(t4[1])
as.numeric(t4[2])
as.numeric(t4[2000]) - as.numeric(t4[1])
120060 / 60
as.numeric(t4[2000] - t4[1])
as.numeric(t4[2000] - t4[1], units="min")
as.numeric(t4[2000] - t4[1], units="minutes")
as.numeric(t4[2000] - t4[1], units="mins")
as.numeric(t4[2000] - t4[1], units="hours")
f <- function(x, b) {
floor(as.numeric(x - b, units="hours"))}
f(t4[2000], t4[1])
?mutate
library(dplyr)
?mutate
f <- function(x) {
floor(as.numeric(x - t4[1], units="hours"))}
f(t4[2000])
sapply(t, f)
mutate(waveheight, Hour = f(Time))
View(waveheight[[1]][[1]])
waveheight = mutate(waveheight, Hour = f(Time))
aggregate(Value ~ Hour, waveheight, max)
waveheight$Time$mon
waveheight[1000:2000]$Time$mon
waveheight[1000:2000]
waveheight[1000]
waveheight[1000,]
waveheight[1000:2000, 1]
waveheight[1000:2000, 1]$mon
waveheight[10000:12000, 1]$mon
waveheight[100000:100100, 1]$mon
waveheight = mutate(waveheight, Month = Time$mon)
aggregate(Value ~ Hour + Month, waveheight, max)
source("~/GitHub/OWFSim/R/weather.R")
colnames(weather)
colnames(weather)[3]
colnames(weather)[3] <- "MaxWave"
temp <- mutate(windspeed, Hour = getHour(Time), Month = Time$mon)
waveheight[1,1]
waveheight[1,2]
waveheight[2,1]
start = waveheight[1,1]
getHour <- function(x) {
floor(as.numeric(x - start, units="hours"))}
temp <- mutate(windspeed, Hour = getHour(Time), Month = Time$mon)
windspeed$Time <- strptime(windspeed$Time, form)
temp <- mutate(windspeed, Hour = getHour(Time), Month = Time$mon)
?select
select(temp, Hour >= 0)
subset(temp, Hour >= 0)
temp <- aggregate(Value ~ Hour + Month, subset(mutate(windspeed, Hour = getHour(Time), Month = Time$mon), Hour >= 0), max)
View(temp)
View(weather)
View(waveheight)
cbind(weather, temp)
?cbind
?full_join
full_join(weather, temp)
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
colnames(weather)[4] <- "MaxWind"
colnames(weather)[3] <- "MaxWave"
weather <- mutate(weather, Allowed1 = MaxWave <= 1.5, Allowed2 = MaxWave <= 2.0 && MaxWind <= 10.0)
?ratio
?count
average(c(1, 4, 6, 2))
mean(c(1, 4, 6, 2))
mean(c(1, 4, 6, 3))
mean(c(T, F, F, T))
mean(c(T, F, F, T, F))
aggregate(Allowed1 ~ Month, weather, mean)
?aggregate
aggregate(cbind(Allowed1, Allowed2) ~ Month, weather, mean)
?count
count(weather$Allowed2)
tally(weather$Allowed2)
summarize(weather$Allowed1)
sum(c(T, F, F, T, F))
sum(Allowed1)
sum(weather$Allowed1)
length(weather[Allowed1 == T])
length(weather[weather$Allowed1 == T])
length(weather$Allowed1[weather$Allowed1 == T])
length(weather$Allowed2[weather$Allowed2 == T])
length(weather$MaxWave[weather$MaxWave <= 2.0])
length(weather$MaxWave[weather$MaxWind <= 10.0])
length(weather$MaxWind[weather$MaxWind <= 10.0])
length(weather[weather$MaxWind <= 10.0])
length(weather[weather$MaxWind <= 10.0 && weather$MaxWave <= 2.0])
?&&
length(weather[weather$MaxWind <= 10.0 & weather$MaxWave <= 2.0])
length(weather$Hour[weather$MaxWind <= 10.0 & weather$MaxWave <= 2.0])
weather <- mutate(weather, Allowed1 = MaxWave <= 1.5, Allowed2 = MaxWave <= 2.0 & MaxWind <= 10.0)
aggregate(cbind(Allowed1, Allowed2) ~ Month, weather, mean)
test <- c(T, F, F, F, T, T, F, NA, NA)
sum(test)
mean(test)
mean(test[1:4])
mean(test[1:5])
mean(test[1:6])
mean(test[1:7])
mean(test[1:8])
is.na(NA)
is.na(T)
weather <- mutate(weather, Allowed1 = MaxWave <= 1.5, Allowed2 = (MaxWave <= 2.0 | is.na(MaxWave)) & (MaxWind <= 10.0 | is.na(MaxWind)))
weather <- mutate(weather, Allowed1 = MaxWave <= 1.5, Allowed2 = (MaxWave <= 2.0 | is.na(MaxWave)) & (MaxWind <= 10.0 | is.na(MaxWind)) & !(is.na(MaxWave) & is.na(MaxWind)))
weather[weather$MaxWind == -999]
weather$MaxWind[weather$MaxWind == -999]
weather$MaxWind[weather$MaxWind == -999] <- NA
weather <- mutate(weather, Allowed1 = MaxWave <= 1.5, Allowed2 = (MaxWave <= 2.0 | is.na(MaxWave)) & (MaxWind <= 10.0 | is.na(MaxWind)) & !(is.na(MaxWave) & is.na(MaxWind)))
weather <- mutate(weather, Allowed1 = MaxWave <= 1.5, Allowed2 = (MaxWave <= 2.0 | is.na(MaxWave)) & (MaxWind <= 10.0 | is.na(MaxWind)))
weather$Allowed2[is.na(weather$MaxWave) & is.na(weather$MaxWind)]
weather$Allowed2[is.na(weather$MaxWave) & is.na(weather$MaxWind)] <- NA
source("~/GitHub/OWFSim/R/weather.R")
?select
?subset
subset(weather, subset = !is.na(MaxWind))
subset(weather, subset = !is.na(MaxWind) & !is.na(MaxWave))
aggregate(cbind(Allowed1, Allowed2) ~ Month, subset(weather, subset = !is.na(MaxWind) & !is.na(MaxWave)), mean)
aggregate(cbind(Allowed1, Allowed2) ~ Month, subset(weather, subset = !(is.na(MaxWind) & is.na(MaxWave))), mean)
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 1.5)
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
ggparcoord(resultsTurb, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Turbines)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
ggparcoord(resultsVes, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Vessels)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
ggparcoord(resultsPerc, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Percent)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Size)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Size)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
resultsSize
resultsSize[-11]
resultsSize[-11,]
ggparcoord(resultsSize[-11,], columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Size)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
