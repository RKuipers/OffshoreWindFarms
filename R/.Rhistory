ggparcoord(resultsAgg, columns = 2:ncol(resultsAgg), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
ggparcoord(resultsAgg, columns = 2:ncol(resultsAgg)-1, groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
ggparcoord(resultsAgg, columns = 2:(ncol(resultsAgg)-1), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsAgg, columns = 2:(ncol(resultsAgg)-1), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
resultsAgg <- aggregate(cbind(Objective, ProdLoss, DirCosts, VesCosts, RepCosts, TechCosts, Size) ~ Category, resultsRaw, mean, subset = Size == 200)
ggparcoord(resultsAgg, columns = 2:(ncol(resultsAgg)-1), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
levels(resultsAgg)
source("~/GitHub/OWFSim/R/plotting.R")
levels <- c("Overlap", "Separate", "Shared")
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsAgg, columns = 2:(ncol(resultsAgg)-1), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
ggparcoord(resultsAgg, columns = c(2, 3), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
resultsAgg <- aggregate(cbind(Objective, ProdLoss, DirCosts, VesCosts, RepCosts, TechCosts, Size) ~ Category, resultsRaw, mean)
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
resultsAgg <- aggregate(cbind(Objective, ProdLoss, DirCosts, VesCosts, RepCosts, TechCosts) ~ Category, resultsRaw, mean)
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
levels(resultsAgg) <- c("Overlap", "Separate", "Shared")
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 1)
levels(resultsAgg)
scale_color_discrete("Category", labels=levels(resultsAgg$Category))
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg$Category)) +
geom_line(size = 2)
resultsAgg$Category
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=levels(resultsAgg)) +
geom_line(size = 2)
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
resultsSize <- aggregate(cbind(Objective, ProdLoss, DirCosts, VesCosts, RepCosts, TechCosts) ~ Size, resultsRaw, mean)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
View(resultsSize)
ggparcoord(resultsSize, columns = -c(1, 2), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
ggparcoord(resultsAgg, columns = -c(1, 2), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = "Size", scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = as.factor("Size"), scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
as.factor("Size")
as.factor(resultsSize$Size)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = as.factor(Size), scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = as.factor(resultsSize$Size), scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = 1, scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = as.factor(1), scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), mapping = aes(color = as.factor(Size)), scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), mapping = aes(color = as.factor(Size)), scale = "globalminmax") +
scale_color_discrete("Size", labels=resultsAgg$Size) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), mapping = aes(color = as.factor(Size)), scale = "globalminmax") +
scale_color_discrete("Size", labels=as.factor(resultsAgg$Size)) +
geom_line(size = 2)
resultsSize <- aggregate(cbind(Objective, ProdLoss, DirCosts, VesCosts, RepCosts, TechCosts) ~ Size, resultsRaw, mean)
?aggregate
?transform
?sapply
?chr
sapply(resultsSize$Size, chr)
?sapply
transform(resultsSize$Size, chr)
sapply(resultsSize$Size, "chr)
?
x
fjdoahfloaj
stop
stop()
"
)
sapply(resultsSize$Size, "chr")
chr(6)
?chr
library(crayon)
sapply(resultsSize$Size, chr)
?transform
transform(resultsSize, Size = chr(Size))
resultsSize <- transform(resultsSize, Size = chr(Size))
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = "Size", scale = "globalminmax") +
scale_color_discrete("Size", labels=resultsAgg$Size) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = "Size", scale = "globalminmax") +
scale_color_discrete("Size", labels=resultsSize$Size) +
geom_line(size = 2)
levels(resultsSize)
levels(resultsSize$NULL)
levels(resultsSize$Size)
levels(resultsSize$Size) <- c("80", "120", "150", "200")
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = "Size", scale = "globalminmax") +
scale_color_discrete("Size", labels=levels(resultsSize$Size)) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = "Size", scale = "globalminmax") +
scale_color_discrete("Size", labels=levels(resultsSize$Size)) +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = "Size", scale = "globalminmax") +
geom_line(size = 2)
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
scale_color_discrete("Category", labels=resultsAgg$Category) +
geom_line(size = 2)
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 2)
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7), groupColumn = "Size", scale = "globalminmax") +
geom_line(size = 2)
resultsSize <- aggregate(cbind(Objective, ProdLoss, DirCosts, VesCosts, RepCosts, TechCosts) ~ Category + Size, resultsRaw, mean) %>% transform(Size = chr(Size))
resultsSize <- aggregate(cbind(Objective, ProdLoss, DirCosts, VesCosts, RepCosts, TechCosts) ~ Category * Size, resultsRaw, mean) %>% transform(Size = chr(Size))
?mutate
?aggregate
View(resultsSize)
resultsSize <- aggregate(cbind(Objective, ProdLoss, DirCosts, VesCosts, RepCosts, TechCosts) ~ Category * Size, resultsRaw, mean) %>% transform(Size = chr(Size))
resultsSize <- aggregate(cbind(Objective, ProdLoss, DirCosts, VesCosts, RepCosts, TechCosts) ~ Category + Size, resultsRaw, mean) %>% transform(Size = chr(Size))
?ggparcoord
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 2)
?aes
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(linetype = Size), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2)
?geom_point
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) + geom_point()
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 1) + geom_point()
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 1) + geom_point(shape = as.factor(Size))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 1) + geom_point(shape = Size)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 1)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 0)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Size)), size = as.factor(Size))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Size), size = as.factor(Size)))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(size = as.factor(Size)))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Size", scale = "uniminmax") +
geom_line(aes(linetype = Category), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Size", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Category)), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Size", scale = "globalminmax") +
geom_line(aes(linetype = as.factor(Category)), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Size", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Category)), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 1)
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 1) +
scale_linetype_manual(values=c("twodash", "dotted", "dashed", "solid"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 1) +
scale_linetype_manual(values=c("twodash", "dotted", "dashed", "solid"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "dashed", "solid"))
?scale_linetype_manual
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "dotdash", "solid"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "bullet"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "blank"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "threedash"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "fourdash"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsSize, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsAgg, columns = c(3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 2)
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 2)
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 2)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size), labels = Size), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2, labels = Size) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
resultsDur <- aggregate(cbind(Objective, ProdLoss, DirCosts, VesCosts, RepCosts, TechCosts) ~ Category + Dur, resultsRaw, mean)
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Dur)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Dur)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "fourdash", "sixdash"))
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(linetype = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Size)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "fourdash", "sixdash"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "fourdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 2) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 1) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 1.5)
ggparcoord(resultsSize, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Size)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid"))
ggparcoord(resultsDur, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Dur)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsVes, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Vessels)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsVes, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Vessels)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsPerc, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Percent)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsTurb, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Turbines)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "blank", "dotdash", "dashed"))
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 1.5)
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 1.5)
source("~/GitHub/OWFSim/R/plotting.R")
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 1.5)
ggparcoord(resultsVes, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "uniminmax") +
geom_line(aes(lty = as.factor(Vessels)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
ggparcoord(resultsPerc, columns = c(3, 4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Percent)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
ggparcoord(resultsPerc, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Percent)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
ggparcoord(resultsVes, columns = c(4, 5, 6, 7, 8), groupColumn = "Category", scale = "globalminmax") +
geom_line(aes(lty = as.factor(Vessels)), size = 1.5) +
scale_linetype_manual(values=c("twodash", "dotted", "longdash", "solid", "dotdash", "dashed"))
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "uniminmax") +
geom_line(size = 1.5)
ggparcoord(resultsAgg, columns = c(2, 3, 4, 5, 6, 7), groupColumn = "Category", scale = "globalminmax") +
geom_line(size = 1.5)
source("~/GitHub/OWFSim/R/plotting.R")
source("~/GitHub/OWFSim/R/plotting.R")
?read.table
read.table("FINO1_windspeed.dat", F, "\t", skip = 6)
windspeed <- read.table("FINO1_windspeed.dat", F, "\t", skip = 6)
View(windspeed)
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
View(windspeed)
source("~/GitHub/OWFSim/R/weather.R")
View(windspeed)
?parse_date_time
??parse_date_time
?strptime
x <- c("2010-01-01 00:00:00", "2015-06-07 11:40:00")
strptime(x, "%Y-%m-%d %H:%M:%S")
z <- strptime(x, "%Y-%m-%d %H:%M:%S")
mon(z)
z.mon
z[1]
mon(z[1])
z[1].mon
?leapS
z[1]$mon
z[2]$mon
z[2]$mon+1
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
curve[15]
curve[10]
curve
curve * 2
curve$4
?approx
approx(curve)
approx(1:10)
approxfun(curve)
approxfun(curve)(11)
approxfun(curve)(12)
approxfun(curve)(11.5)
approxfun(curve)(16.43)
approxfun(curve, yleft = 0, yright = 0)(16.43)
approxfun(curve, yleft = 0, yright = 0)(24)
approxfun(curve, yleft = 0, yright = 0)(24.5)
approxfun(curve, yleft = 0, yright = 0)(25.5)
approxfun(curve, yleft = 0, yright = 0)(25)
approxfun(curve, yleft = 0, yright = 0)(25.0001)
approxfun(curve, yleft = 0, yright = 0)(3)
approxfun(curve, yleft = 0, yright = 0)(4)
approxfun(curve, yleft = 0, yright = 0)(3.5)
approxfun(curve, yleft = 0, yright = 0)(3.4)
approxfun(curve, yleft = 0, yright = 0)(1)
approxfun(curve, yleft = 0, yright = 0)(0)
approxfun(curve, yleft = 0, yright = 0)(-4)
approxfun(curve, yleft = 0, yright = 0)(11)
approxfun(curve * 2, yleft = 0, yright = 0)(11)
source("~/GitHub/OWFSim/R/weather.R")
curve(10)
curve(11)
source("~/GitHub/OWFSim/R/weather.R")
curve(10)
source("~/GitHub/OWFSim/R/weather.R")
curve(10)
curve(9.75)
source("~/GitHub/OWFSim/R/weather.R")
curve(9.75)
curve(10)
?data.frame
table(strptime(windspeed$Time)$mon, curve(windspeed$Value))
table(strptime(windspeed$Time, "%Y-%m-%d %H:%M:%S")$mon, curve(windspeed$Value))
strptime(windspeed$Time, "%Y-%m-%d %H:%M:%S")
strptime(windspeed$Time, "%Y-%m-%d %H:%M:%S")$mon
curve(windspeed$Value)
t <- table(strptime(windspeed$Time, "%Y-%m-%d %H:%M:%S")$mon, curve(windspeed$Value))
t[1,1]
t[1,]
m <- c(1, 2, 3, 4, 1, 2, 3, 4, 1, 1, 1, 2, 4, 4)
v <- c(5, 2, 6, 2, 3, 8, 6, 0, 7, 3, 6, 8, 9, 1)
t2 <- table(m, v)
t2
list(m, v)
data.frame(m, v)
f <- data.frame(m, v)
aggregate(v ~ m)
aggregate(v ~ m, f, mean)
f <- data.frame(strptime(windspeed$Time, "%Y-%m-%d %H:%M:%S")$mon, curve(windspeed$Value))
View(f)
aggregate(2 ~ 1, f, mean)
?aggregate
colnames(f) <- c("m", "v")
aggregate(v ~ m, f, mean)
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
View(windspeedSimple)
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
source("~/GitHub/OWFSim/R/weather.R")
View(waveheight)
?read.table
source("~/GitHub/OWFSim/R/weather.R")
?mutate
source("~/GitHub/OWFSim/R/weather.R")
?apply
waveheight$Time <- strptime(waveheight$Time)
waveheight$Time <- strptime(waveheight$Time, "%Y-%m-%d %H:%M:%S")
waveheight$Time[1]
waveheight$Time[1]$mon
waveheight$Time[1]$year
waveheight$Time[1]$y
waveheight$Time[1]$day
waveheight$Time[1]$d
?POSIXlt
waveheight$Time[1]$yday
waveheight$Time[100]$yday
waveheight$Time[1000]$yday
waveheight$Time[10000]$yday
waveheight$Time[100000]$yday
t <- c("2015-01-01 00:10:00", "2015-01-01 01:06:00")
t[2] - t[1]
t2 <- strptime(t)
t2 <- strptime(t, "%Y-%m-%d %H:%M:%S")
source("~/GitHub/OWFSim/R/weather.R")
t2 <- strptime(t, form)
t2
t2[2]
t2[2] - t2[1]
t2[1]
t2[1] + 5
t2[2] - t2[1] > 55
t2[2] - t2[1] > 57
(t2[2] - t2[1])$min
t3 <- t2[2] - t2[1]
t3
t3 > 50
t3 > 56
t3 - 10
t3 - 10.5
5 % 2
5 mod 2
5 'mod' 2
5 %% 2
14 %% 3
t3 %% 9
t <- c("2015-01-01 00:10:00", "2015-01-01 01:06:00", "2015-10-12 12:50:00")
t2 <- strptime(t, form)
t2[3] - t2[1]
t2[3] - t2[1] > 284
t2[3] - t2[1] > 285
t2[3] - (t2[1] + 1)
t2[3] - (t2[1] + 10)
t2[3] - (t2[1] + 100)
t2[3] - (t2[1] + 1000)
t2[3] - (t2[1] + 10000)
t2[3] - (t2[1] + 100000)
source("~/GitHub/OWFSim/R/weather.R")
